/* ==========================================================================
   LIST-UI
   ========================================================================== */
/**
 * The UI list object creates blocky list items with a keyline separator out of
 * a `ul` or `ol`.
 */




// Here we set a variable assuming that default and module settings
// are not set globally. If they have been previously been defined,
// the following variable will be overriden and will be set to `true`.
$imported-default-settings: false !default;
$imported-module-settings: false !default;

@if ($imported-default-settings == false) {
  @warn "Oops! Have you included default settings and module settings files?"
}


$list-ui-namespace:                  $namespace !default;

$list-ui-padding:                    $base-spacing-unit !default;
$list-ui-padding--tiny:              quarter($list-ui-padding) !default;
$list-ui-padding--small:             halve($list-ui-padding) !default;
$list-ui-padding--large:             double($list-ui-padding) !default;
$list-ui-padding--huge:              quadruple($list-ui-padding) !default;

$list-ui-border-width:               1px !default;
$list-ui-border-style:               solid !default;
$list-ui-border-color:               #ccc !default;

$enable-list-ui--flush:              false !default;
$enable-list-ui--tiny:               false !default;
$enable-list-ui--small:              false !default;
$enable-list-ui--large:              false !default;
$enable-list-ui--huge:               false !default;

$enable-remove-border-at-first-item: false !default;
$enable-remove-border-at-last-item:  false !default;

.#{$list-ui-namespace}list-ui,
%#{$list-ui-namespace}list-ui,
.#{$list-ui-namespace}list-ui__item,
%#{$list-ui-namespace}list-ui__item {
  border: 0 $list-ui-border-style $list-ui-border-color;
}

.#{$list-ui-namespace}list-ui,
%#{$list-ui-namespace}list-ui {
  margin: 0;
  padding: 0;
  list-style: none;

  @if $enable-remove-border-at-first-item{
    border-top-width: 0;
  }

  > li {
    @extend %#{$list-ui-namespace}list-ui__item;
  }
}

  .#{$list-ui-namespace}list-ui__item,
  %#{$list-ui-namespace}list-ui__item {
    padding: $list-ui-padding;
    border-bottom-width: $list-ui-border-width;

    @if $enable-remove-border-at-last-item {
      &:last-child{
        border-bottom-width: 0px;
      }
    }
  }


@if ($enable-list-ui--flush == true) {

  /**
   * Tiny list-uis.
   */
  .#{$list-ui-namespace}list-ui--flush,
  %#{$list-ui-namespace}list-ui--flush {

    > .#{$list-ui-namespace}list-ui__item,
    > %#{$list-ui-namespace}list-ui__item {
        padding: 0;
    }

  }

}

@if ($enable-list-ui--tiny == true) {

  /**
   * Tiny list-uis.
   */
  .#{$list-ui-namespace}list-ui--tiny,
  %#{$list-ui-namespace}list-ui--tiny {

    > .#{$list-ui-namespace}list-ui__item,
    > %#{$list-ui-namespace}list-ui__item {
        padding: $list-ui-padding--tiny;
    }

  }

}

@if ($enable-list-ui--small == true) {

  /**
   * Small list-uis.
   */
  .#{$list-ui-namespace}list-ui--small,
  %#{$list-ui-namespace}list-ui--small {

    > .#{$list-ui-namespace}list-ui__item,
    > %#{$list-ui-namespace}list-ui__item {
      padding: $list-ui-padding--small;
    }

  }
}


@if ($enable-list-ui--large == true) {

  /**
   * Large list-uis.
   */
  .#{$list-ui-namespace}list-ui--large,
  %#{$list-ui-namespace}list-ui--large {

    > .#{$list-ui-namespace}list-ui__item,
    > %#{$list-ui-namespace}list-ui__item {
      padding: $list-ui-padding--large;
    }

  }

}

@if ($enable-list-ui--huge == true) {

  /**
   * Huge list-uis.
   */
  .#{$list-ui-namespace}list-ui--huge,
  %#{$list-ui-namespace}list-ui--huge {

    > .#{$list-ui-namespace}list-ui__item,
    > %#{$list-ui-namespace}list-ui__item {
      padding: $list-ui-padding--huge;
    }

  }

}