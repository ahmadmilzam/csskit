/* ==========================================================================
   Responsive Spacing Classes
   ========================================================================== */

// Here we set a variable assuming that default settings are not set
// globally. If they have been previously been defined, the following variable
// will be overriden and will be set to `true`.
$imported-default-settings: false !default;

@if ($imported-default-settings == false) {
  @warn "Oops! Have you included a default settings file?";
}

/**
 * Margin and padding helper classes. Use these to tweak layout on a micro
 * level.
 *
 * `.(m|p)(t|r|b|l|h|v)(-|+|0) {}` = margin/padding top/right/bottom/left/horizontal/vertical less/more/none
 */

// Predefine the variables below in order to alter and enable specific features.
$enable-responsive-margins:                   false !default;
$enable-responsive-margins--tiny:             false !default;
$enable-responsive-margins--small:            false !default;
$enable-responsive-margins--large:            false !default;
$enable-responsive-margins--huge:             false !default;

$enable-responsive-margins--negative:         false !default;
$enable-responsive-margins--negative-tiny:    false !default;
$enable-responsive-margins--negative-small:   false !default;
$enable-responsive-margins--negative-large:   false !default;
$enable-responsive-margins--negative-huge:    false !default;

$enable-responsive-margins--none:             false !default;

$enable-responsive-paddings:                  false !default;
$enable-responsive-paddings--tiny:            false !default;
$enable-responsive-paddings--small:           false !default;
$enable-responsive-paddings--large:           false !default;
$enable-responsive-paddings--huge:            false !default;

$enable-responsive-paddings--none:            false !default;

$enable-xlarge-responsive-spacing-clasess:    false !default;
$enable-xxlarge-responsive-spacing-clasess:   false !default;

$spacing-breakpoint-sizes:
    small,
    medium,
    large;

$spacing-breakpoint-queries:
  unquote($small-up),
  unquote($medium-up),
  unquote($large-up);

@if $enable-xlarge-responsive-spacing-clasess == true {
  $spacing-breakpoint-sizes:
    small,
    medium,
    large,
    xlarge;

  $spacing-breakpoint-queries:
    unquote($small-up),
    unquote($medium-up),
    unquote($large-up),
    unquote($xlarge-up);
}

@if $enable-xxlarge-responsive-spacing-clasess == true {
  $spacing-breakpoint-sizes:
    small,
    medium,
    large,
    xlarge,
    xxlarge;

  $spacing-breakpoint-queries:
    unquote($small-up),
    unquote($medium-up),
    unquote($large-up),
    unquote($xlarge-up),
    unquote($xxlarge-up);
}


@each $breakpoint in $spacing-breakpoint-sizes {

  @media #{nth($spacing-breakpoint-queries, index($spacing-breakpoint-sizes, $breakpoint))} {
    @if ($enable-responsive-margins == true) {

      /**
       * Margin helper classes.
       *
       * Add margins.
       */

      .#{$spacing-namespace}#{$breakpoint}-m       { margin:           rem-calc($spacing-margin) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mt      { margin-top:       rem-calc($spacing-margin) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mr      { margin-right:     rem-calc($spacing-margin) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mb      { margin-bottom:    rem-calc($spacing-margin) !important; }
      .#{$spacing-namespace}#{$breakpoint}-ml      { margin-left:      rem-calc($spacing-margin) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mh      { margin-right:     rem-calc($spacing-margin) !important; margin-left:      rem-calc($spacing-margin) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mv      { margin-top:       rem-calc($spacing-margin) !important; margin-bottom:    rem-calc($spacing-margin) !important; }

    }

    @if ($enable-responsive-margins--tiny == true) {

      /**
       * Add tiny margins.
       */

      .#{$spacing-namespace}#{$breakpoint}-m--     { margin:           rem-calc( quarter($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mt--    { margin-top:       rem-calc( quarter($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mr--    { margin-right:     rem-calc( quarter($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mb--    { margin-bottom:    rem-calc( quarter($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-ml--    { margin-left:      rem-calc( quarter($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mh--    { margin-right:     rem-calc( quarter($spacing-margin) ) !important; margin-left:     rem-calc( quarter($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mv--    { margin-top:       rem-calc( quarter($spacing-margin) ) !important; margin-bottom:   rem-calc( quarter($spacing-margin) ) !important; }

    }


    @if ($enable-responsive-margins--small == true) {

      /**
       * Add small margins.
       */

      .#{$spacing-namespace}#{$breakpoint}-m-      { margin:           rem-calc( halve($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mt-     { margin-top:       rem-calc( halve($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mr-     { margin-right:     rem-calc( halve($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mb-     { margin-bottom:    rem-calc( halve($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-ml-     { margin-left:      rem-calc( halve($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mh-     { margin-right:     rem-calc( halve($spacing-margin) ) !important; margin-left:   rem-calc( halve($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mv-     { margin-top:       rem-calc( halve($spacing-margin) ) !important; margin-bottom: rem-calc( halve($spacing-margin) ) !important; }

    }


    @if ($enable-responsive-margins--large == true) {

      /**
       * Add large margins.
       */

      .#{$spacing-namespace}#{$breakpoint}-m\+     { margin:           rem-calc( double($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mt\+    { margin-top:       rem-calc( double($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mr\+    { margin-right:     rem-calc( double($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mb\+    { margin-bottom:    rem-calc( double($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-ml\+    { margin-left:      rem-calc( double($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mh\+    { margin-right:     rem-calc( double($spacing-margin) ) !important; margin-left:      rem-calc( double($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mv\+    { margin-top:       rem-calc( double($spacing-margin) ) !important; margin-bottom:    rem-calc( double($spacing-margin) ) !important; }

    }


    @if ($enable-responsive-margins--huge == true) {

      /**
       * Add huge margins.
       */

      .#{$spacing-namespace}#{$breakpoint}-m\+\+   { margin:           rem-calc( double($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mt\+\+  { margin-top:       rem-calc( double($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mr\+\+  { margin-right:     rem-calc( double($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mb\+\+  { margin-bottom:    rem-calc( double($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-ml\+\+  { margin-left:      rem-calc( double($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mh\+\+  { margin-right:     rem-calc( double($spacing-margin) ) !important; margin-left:   rem-calc( double($spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mv\+\+  { margin-top:       rem-calc( double($spacing-margin) ) !important; margin-bottom: rem-calc( double($spacing-margin) ) !important; }

    }


    @if ($enable-responsive-margins--none == true) {

      /**
       * Remove margins.
       */

      .#{$spacing-namespace}#{$breakpoint}-m0      { margin:           0 !important; }
      .#{$spacing-namespace}#{$breakpoint}-mt0     { margin-top:       0 !important; }
      .#{$spacing-namespace}#{$breakpoint}-mr0     { margin-right:     0 !important; }
      .#{$spacing-namespace}#{$breakpoint}-mb0     { margin-bottom:    0 !important; }
      .#{$spacing-namespace}#{$breakpoint}-ml0     { margin-left:      0 !important; }
      .#{$spacing-namespace}#{$breakpoint}-mh0     { margin-right:     0 !important; margin-left:      0 !important; }
      .#{$spacing-namespace}#{$breakpoint}-mv0     { margin-top:       0 !important; margin-bottom:    0 !important; }

    }


    @if ($enable-responsive-margins--negative == true) {

      /**
       * Negative margins.
       */

      .#{$spacing-namespace}#{$breakpoint}-m      { margin:           rem-calc(-$spacing-margin) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mt     { margin-top:       rem-calc(-$spacing-margin) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mr     { margin-right:     rem-calc(-$spacing-margin) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mb     { margin-bottom:    rem-calc(-$spacing-margin) !important; }
      .#{$spacing-namespace}#{$breakpoint}-ml     { margin-left:      rem-calc(-$spacing-margin) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mh     { margin-right:     rem-calc(-$spacing-margin) !important; margin-left:      rem-calc(-$spacing-margin) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mv     { margin-top:       rem-calc(-$spacing-margin) !important; margin-bottom:    rem-calc(-$spacing-margin) !important; }

    }


    @if ($enable-responsive-margins--negative-tiny == true) {

      /**
       * Tiny negative margins.
       */

      .#{$spacing-namespace}#{$breakpoint}-m--    { margin:           rem-calc( quarter(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mt--   { margin-top:       rem-calc( quarter(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mr--   { margin-right:     rem-calc( quarter(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mb--   { margin-bottom:    rem-calc( quarter(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-ml--   { margin-left:      rem-calc( quarter(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mh--   { margin-right:     rem-calc( quarter(-$spacing-margin) ) !important; margin-left:     rem-calc( quarter(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mv--   { margin-top:       rem-calc( quarter(-$spacing-margin) ) !important; margin-bottom:   rem-calc( quarter(-$spacing-margin) ) !important; }

    }


    @if ($enable-responsive-margins--negative-small == true) {

      /**
       * Small negative margins.
       */

      .#{$spacing-namespace}#{$breakpoint}-m-     { margin:           rem-calc( halve(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mt-    { margin-top:       rem-calc( halve(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mr-    { margin-right:     rem-calc( halve(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mb-    { margin-bottom:    rem-calc( halve(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-ml-    { margin-left:      rem-calc( halve(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mh-    { margin-right:     rem-calc( halve(-$spacing-margin) ) !important; margin-left:   rem-calc( halve(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mv-    { margin-top:       rem-calc( halve(-$spacing-margin) ) !important; margin-bottom: rem-calc( halve(-$spacing-margin) ) !important; }

    }


    @if ($enable-responsive-margins--negative-large == true) {

      /**
       * Large negative margins.
       */

      .#{$spacing-namespace}#{$breakpoint}-m\+    { margin:           rem-calc( double(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mt\+   { margin-top:       rem-calc( double(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mr\+   { margin-right:     rem-calc( double(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mb\+   { margin-bottom:    rem-calc( double(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-ml\+   { margin-left:      rem-calc( double(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mh\+   { margin-right:     rem-calc( double(-$spacing-margin) ) !important; margin-left:      rem-calc( double(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mv\+   { margin-top:       rem-calc( double(-$spacing-margin) ) !important; margin-bottom:    rem-calc( double(-$spacing-margin) ) !important; }

    }


    @if ($enable-responsive-margins--negative-huge == true) {

      /**
       * Huge negative margins.
       */

      .#{$spacing-namespace}#{$breakpoint}-m\+\+  { margin:           rem-calc( quadruple(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mt\+\+ { margin-top:       rem-calc( quadruple(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mr\+\+ { margin-right:     rem-calc( quadruple(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mb\+\+ { margin-bottom:    rem-calc( quadruple(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-ml\+\+ { margin-left:      rem-calc( quadruple(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mh\+\+ { margin-right:     rem-calc( quadruple(-$spacing-margin) ) !important; margin-left:   rem-calc( quadruple(-$spacing-margin) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-mv\+\+ { margin-top:       rem-calc( quadruple(-$spacing-margin) ) !important; margin-bottom: rem-calc( quadruple(-$spacing-margin) ) !important; }

    }


    @if ($enable-responsive-paddings == true) {

      /**
       * Padding helper classes.
       *
       * Add paddings.
       */

      .#{$spacing-namespace}#{$breakpoint}-p       { padding:          rem-calc($spacing-padding) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pt      { padding-top:      rem-calc($spacing-padding) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pr      { padding-right:    rem-calc($spacing-padding) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pb      { padding-bottom:   rem-calc($spacing-padding) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pl      { padding-left:     rem-calc($spacing-padding) !important; }
      .#{$spacing-namespace}#{$breakpoint}-ph      { padding-right:    rem-calc($spacing-padding) !important; padding-left:    rem-calc($spacing-padding) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pv      { padding-top:      rem-calc($spacing-padding) !important; padding-bottom:  rem-calc($spacing-padding) !important; }

    }


    @if ($enable-responsive-paddings--tiny == true) {

      /**
       * Add tiny paddings.
       */

      .#{$spacing-namespace}#{$breakpoint}-p--     { padding:           rem-calc( quarter($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pt--    { padding-top:       rem-calc( quarter($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pr--    { padding-right:     rem-calc( quarter($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pb--    { padding-bottom:    rem-calc( quarter($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pl--    { padding-left:      rem-calc( quarter($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-ph--    { padding-right:     rem-calc( quarter($spacing-padding) ) !important; padding-left:      rem-calc( quarter($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pv--    { padding-top:       rem-calc( quarter($spacing-padding) ) !important; padding-bottom:    rem-calc( quarter($spacing-padding) ) !important; }

    }


    @if ($enable-responsive-paddings--small == true) {

      /**
       * Add small paddings.
       */

      .#{$spacing-namespace}#{$breakpoint}-p-      { padding:           rem-calc( halve($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pt-     { padding-top:       rem-calc( halve($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pr-     { padding-right:     rem-calc( halve($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pb-     { padding-bottom:    rem-calc( halve($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pl-     { padding-left:      rem-calc( halve($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-ph-     { padding-right:     rem-calc( halve($spacing-padding) ) !important; padding-left:    rem-calc( halve($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pv-     { padding-top:       rem-calc( halve($spacing-padding) ) !important; padding-bottom:  rem-calc( halve($spacing-padding) ) !important; }

    }


    @if ($enable-responsive-paddings--large == true) {

      /**
       * Add large paddings.
       */

      .#{$spacing-namespace}#{$breakpoint}-p\+     { padding:           rem-calc( double($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pt\+    { padding-top:       rem-calc( double($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pr\+    { padding-right:     rem-calc( double($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pb\+    { padding-bottom:    rem-calc( double($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pl\+    { padding-left:      rem-calc( double($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-ph\+    { padding-right:     rem-calc( double($spacing-padding) ) !important; padding-left:   rem-calc( double($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pv\+    { padding-top:       rem-calc( double($spacing-padding) ) !important; padding-bottom: rem-calc( double($spacing-padding) ) !important; }

    }


    @if ($enable-responsive-paddings--huge == true) {

      /**
       * Add huge paddings.
       */

      .#{$spacing-namespace}#{$breakpoint}-p\+\+   { padding:           rem-calc( quadruple($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pt\+\+  { padding-top:       rem-calc( quadruple($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pr\+\+  { padding-right:     rem-calc( quadruple($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pb\+\+  { padding-bottom:    rem-calc( quadruple($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pl\+\+  { padding-left:      rem-calc( quadruple($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-ph\+\+  { padding-right:     rem-calc( quadruple($spacing-padding) ) !important; padding-left:    rem-calc( quadruple($spacing-padding) ) !important; }
      .#{$spacing-namespace}#{$breakpoint}-pv\+\+  { padding-top:       rem-calc( quadruple($spacing-padding) ) !important; padding-bottom:  rem-calc( quadruple($spacing-padding) ) !important; }

    }


    @if ($enable-responsive-paddings--none == true) {

      /**
       * Remove paddings.
       */

      .#{$spacing-namespace}#{$breakpoint}-p0      { padding:          0 !important; }
      .#{$spacing-namespace}#{$breakpoint}-pt0     { padding-top:      0 !important; }
      .#{$spacing-namespace}#{$breakpoint}-pr0     { padding-right:    0 !important; }
      .#{$spacing-namespace}#{$breakpoint}-pb0     { padding-bottom:   0 !important; }
      .#{$spacing-namespace}#{$breakpoint}-pl0     { padding-left:     0 !important; }
      .#{$spacing-namespace}#{$breakpoint}-ph0     { padding-right:    0 !important; padding-left:     0 !important; }
      .#{$spacing-namespace}#{$breakpoint}-pv0     { padding-top:      0 !important; padding-bottom:   0 !important; }

    }

  }
}
