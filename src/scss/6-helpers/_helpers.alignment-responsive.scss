/* ==========================================================================
   Responsive Text Alignment
   ========================================================================== */

// Here we set a variable assuming that default settings are not set
// globally. If they have been previously been defined, the following variable
// will be overriden and will be set to `true`.
$imported-default-settings: false !default;

@if ($imported-default-settings == false) {
  @warn "Oops! Have you included a default settings file?";
}

$enable-xlarge-alignment-clasess: false !default;

// Text alignment class names
$alignment-class-names:
  small-only,
  small,
  medium-only,
  medium,
  large-only,
  large;

// Text alignment breakpoints
$alignment-class-breakpoints-queries:
  $small-only,
  $small-up,
  $medium-only,
  $medium-up,
  $large-only,
  $large-up;

@if $enable-xlarge-alignment-clasess == true {

  $alignment-class-names:
    small-only,
    small,
    medium-only,
    medium,
    large-only,
    large,
    xlarge-only,
    xlarge,
    xxlarge-only,
    xxlarge;

  $alignment-class-breakpoints-queries:
    $small-only,
    $small-up,
    $medium-only,
    $medium-up,
    $large-only,
    $large-up,
    $xlarge-only,
    $xlarge-up,
    $xxlarge-only,
    $xxlarge-up;
}

// Generates text align and justify classes

@for $i from 1 through length($alignment-class-names) {
  @media #{(nth($alignment-class-breakpoints-queries, $i))} {
    .#{(nth($alignment-class-names, $i))}-text-left { text-align: left !important; }
    .#{(nth($alignment-class-names, $i))}-text-right   { text-align: right !important; }
    .#{(nth($alignment-class-names, $i))}-text-center  { text-align: center !important; }
    .#{(nth($alignment-class-names, $i))}-text-justify { text-align: justify !important; }
  }
}
