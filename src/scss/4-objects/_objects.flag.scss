/* ==========================================================================
   FLAG
   ========================================================================== */
/**
 * The flag object is a design pattern similar to the media object, however it
 * utilises `display: table[-cell];` to give us control over the vertical
 * alignments of the text and image. csswizardry.com/2013/05/the-flag-object
 */




// Here we set a variable assuming that default and module settings
// are not set globally. If they have been previously been defined,
// the following variable will be overriden and will be set to `true`.
$imported-default-settings: false !default;

@if ($imported-default-settings == false) {
  @warn "Oops! Have you included default settings and module settings files?"
}


$flag-namespace:                     $namespace !default;

$flag-gutter:                        $base-spacing-unit !default;
$flag-gutter--tiny:                  quarter($flag-gutter) !default;
$flag-gutter--small:                 halve($flag-gutter) !default;
$flag-gutter--large:                 double($flag-gutter) !default;
$flag-gutter--huge:                  quadruple($flag-gutter) !default;

$enable-flag--tiny:                  false !default;
$enable-flag--small:                 false !default;
$enable-flag--large:                 false !default;
$enable-flag--huge:                  false !default;
$enable-flag--rev:                   false !default;
$enable-flag--bleed:                 false !default;
$enable-flag--top:                   false !default;
$enable-flag--bottom:                false !default;
$enable-flag--responsive:            false !default;
$flag-collapse-at:                   720px !default;


/**
 * 1. Allows us to control vertical alignments
 * 2. Force the object to be the full width of its parent. Combined with [1],
 *    this makes the object behave in a quasi-`display: block;` manner.
 */
.#{$flag-namespace}flag,
%#{$flag-namespace}flag {
  display: table; /* [1] */
  width: 100%; /* [2] */
}

  /**
   * Items within a flag object. There should only ever be one of each.
   *
   * 1. Default to aligning content to their middles.
   */
  .#{$flag-namespace}flag__img,
  %#{$flag-namespace}flag__img,
  .#{$flag-namespace}flag__body,
  %#{$flag-namespace}flag__body {
    display: table-cell;
    vertical-align: middle; /* [1] */
  }

  /**
   * Flag images have a space between them and the body of the object.
   */
  .#{$flag-namespace}flag__img,
  %#{$flag-namespace}flag__img {
    padding-right: rem-calc($flag-gutter);

    > img {
      display: block;
      max-width: none;
    }

    /**
     * Tiny flags.
     */
    @if ($enable-flag--tiny == true) {
      .#{$flag-namespace}flag--tiny > &,
      %#{$flag-namespace}flag--tiny > & {
        padding-right: rem-calc($flag-gutter--tiny);
      }

      /**
       * Tiny reversed flags.
       */
      @if ($enable-flag--rev == true) {
        .#{$flag-namespace}flag--tiny.#{$flag-namespace}flag--rev > &,
        %#{$flag-namespace}flag--tiny%#{$flag-namespace}flag--rev > & {
          padding-right: 0;
          padding-left:  rem-calc($flag-gutter--tiny);
        }

      }
    }

    /**
     * Small flags.
     */
    @if ($enable-flag--small == true) {
      .#{$flag-namespace}flag--small > &,
      %#{$flag-namespace}flag--small > & {
        padding-right: rem-calc($flag-gutter--tiny);
      }

      /**
       * Small reversed flags.
       */
      @if ($enable-flag--rev == true) {
        .#{$flag-namespace}flag--small.#{$flag-namespace}flag--rev > &,
        %#{$flag-namespace}flag--small%#{$flag-namespace}flag--rev > & {
          padding-right: 0;
          padding-left:  rem-calc($flag-gutter--small);
        }

      }
    }

    /**
     * Large flags.
     */
    @if ($enable-flag--large == true) {
      .#{$flag-namespace}flag--large > &,
      %#{$flag-namespace}flag--large > & {
        padding-right: rem-calc($flag-gutter--large);
      }

      /**
       * Large reversed flags.
       */
      @if ($enable-flag--rev == true) {
        .#{$flag-namespace}flag--large.#{$flag-namespace}flag--rev > &,
        %#{$flag-namespace}flag--large%#{$flag-namespace}flag--rev > & {
          padding-right: 0;
          padding-left:  rem-calc($flag-gutter--large);
        }

      }
    }

    /**
     * Huge flags.
     */
    @if ($enable-flag--huge == true) {
      .#{$flag-namespace}flag--huge > &,
      %#{$flag-namespace}flag--huge > & {
        padding-right: rem-calc($flag-gutter--huge);
      }

      /**
       * Huge reversed flags.
       */
      @if ($enable-flag--rev == true) {
        .#{$flag-namespace}flag--huge.#{$flag-namespace}flag--rev > &,
        %#{$flag-namespace}flag--huge%#{$flag-namespace}flag--rev > & {
          padding-right: 0;
          padding-left:  rem-calc($flag-gutter--huge);
        }

      }
    }

  }

  /**
   * The container for the main content of the flag object.
   *
   * 1. Forces the `.flag__body` to take up all remaining space.
   */
  .#{$flag-namespace}flag__body,
  %#{$flag-namespace}flag__body {
    width: 100%; /* [1] */
  }


@if ($enable-flag--rev == true) {

  /**
   * Reversed flag objects have their image-content to the right, and text-content
   * to the left.
   *
   * 1. Swap the rendered direction of the object…
   * 2. …and reset it.
   * 3. Reassign margins to the correct sides.
   */

  .#{$flag-namespace}flag--rev,
  %#{$flag-namespace}flag--rev {
    direction: rtl; /* [1] */

    > .#{$flag-namespace}flag__img,
    > %#{$flag-namespace}flag__img,
    > .#{$flag-namespace}flag__body,
    > %#{$flag-namespace}flag__body {
      direction: ltr; /* [2] */
    }

    > .#{$flag-namespace}flag__img,
    > %#{$flag-namespace}flag__img {
      padding-right: 0; /* [3] */
      padding-left: $flag-gutter; /* [3] */
    }

  }

}

@if ($enable-flag--bleed == true) {

  /**
   * Bleed flag objects have no space between the image- and text-content.
   */

  .#{$flag-namespace}flag--bleed,
  %#{$flag-namespace}flag--bleed {

    > .#{$flag-namespace}flag__img,
    > %#{$flag-namespace}flag__img {
      padding-right: 0;
      padding-left:  0;
    }

  }

}

@if ($enable-flag--top == true) {

  /**
   * Vertically top aligned flag objects.
   */

  .#{$flag-namespace}flag--top > .#{$flag-namespace}flag__img,
  %#{$flag-namespace}flag--top > .#{$flag-namespace}flag__img,
  .#{$flag-namespace}flag--top > .#{$flag-namespace}flag__body,
  %#{$flag-namespace}flag--top > .#{$flag-namespace}flag__body{
    vertical-align: top;
  }

}

@if ($enable-flag--bottom == true) {

  /**
   * Vertically bottom aligned flag objects.
   */

  .#{$flag-namespace}flag--bottom > .#{$flag-namespace}flag__img,
  %#{$flag-namespace}flag--bottom > .#{$flag-namespace}flag__img,
  .#{$flag-namespace}flag--bottom > .#{$flag-namespace}flag__body,
  %#{$flag-namespace}flag--bottom > .#{$flag-namespace}flag__body{
    vertical-align: bottom;
  }

}

@if ($enable-flag--responsive == true) {

  /**
   * Responsive flag objects.
   *
   * There is a very pragmatic, simple implementation of a responsive flag
   * object, which simply places the text-content beneath the image-content.
   *
   * We use a `max-width` media query because:
   *
   * a) it is the least verbose method in terms of amount of code required.
   * b) the flag object's default state is image-next-to-text, so its stacked
   *    state is the exception, rather than the rule.
   */
  @media screen and (max-width: $flag-collapse-at) {

    @if ($enable-flag--rev == true) {
      .#{$flag-namespace}flag--responsive,
      %#{$flag-namespace}flag--responsive{
        /**
         * Disable reversal of content because there is no concept of
         * 'reversed' in a stacked layout.
         */
        direction: ltr;
      }
    }

    .#{$flag-namespace}flag--responsive,
    %#{$flag-namespace}flag--responsive,
    .#{$flag-namespace}flag--responsive> .#{$flag-namespace}flag__img,
    %#{$flag-namespace}flag--responsive> %#{$flag-namespace}flag__img,
    .#{$flag-namespace}flag--responsive> .#{$flag-namespace}flag__body,
    %#{$flag-namespace}flag--responsive> %#{$flag-namespace}flag__body {
      display: block;
    }

    /**
     * Rework the spacings on regular flag objects.
     */
    .#{$flag-namespace}flag--responsive > .#{$flag-namespace}flag__img,
    %#{$flag-namespace}flag--responsive > %#{$flag-namespace}flag__img {
      padding-right: 0;
      padding-left:  0;
      margin-bottom: $flag-gutter;
      > img{
        max-width: 100%;
      }
    }

  }

}
