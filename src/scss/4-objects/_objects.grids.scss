/* ==========================================================================
   GRIDS
   ========================================================================== */
/**
 * Fully customizable and responsive CSS grids.
 *
 * Here we set a variable assuming that default and module settings
 * are not set globally. If they have been previously been defined,
 * the following variable will be overriden and will be set to `true`.
 */


$imported-default-settings: false !default;

@if ($imported-default-settings == false) {
  @warn "Oops! Have you included default settings and module settings files?";
}

/*
   Grids settings.
   ========================================================================== */

/**
 * We use these as default total columns throughout the framework.
 */
$columns-gutter:                        $base-spacing-unit !default;
$container-width:                       1000px !default;
$default-float:                         left !default;
$opposite-float:                        right !default;

$enable-xl-grid-classes:                false !default;
$enable-xxl-grid-classes:               false !default;

/*
   Default grid classess
   ========================================================================== */
$enable-default-grid-classes:           true !default;

$enable-grid-half:                      true !default;
$enable-grid-third:                     true !default;
$enable-grid-fourth:                    true !default;
$enable-grid-fifth:                     true !default;


/*
   Grid unit modifier
   ========================================================================== */
$enable-grid-bleed:                     false !default;
$enable-grid-pull:                      false !default;
$enable-grid-push:                      false !default;
$enable-grid-offset:                    false !default;
$enable-grid-reset:                     false !default;
$enable-grid-centered:                  false !default;
$enable-grid-uncentered:                false !default;



/*
   Default Grid Classes
   ========================================================================== */
@mixin generate-default-grid-classes($size, $total-col: false){

  @for $i from 1 through $total-col - 1 {
    @if percentage(($i / $total-col)) != 50% or $total-col == 2 {
      .#{$size}-#{$i}#{of}#{$total-col} {
        @include grid-column(
          $columns:$i,
          $total-columns: $total-col,
          $bleed:null,
          $float:false
        );
      }
    }
  }

  @if $enable-grid-push == true{
    @for $i from 1 through $total-col - 1 {
      .#{$size}-push-#{$i}#{of}#{$total-col} {
        @include grid-column(
          $total-columns: $total-col,
          $push:$i,
          $bleed:null,
          $float:false
        );
      }
    }
  }

  @if $enable-grid-pull == true{

    @for $i from 1 through $total-col - 1 {
      .#{$size}-pull-#{$i}#{of}#{$total-col} {
        @include grid-column(
          $total-columns: $total-col,
          $pull:$i,
          $bleed:null,
          $float:false
        );
      }
    }

  }

  @if $enable-grid-offset == true{
    @for $i from 1 through $total-col - 1 {
      .#{$size}-offset-#{$i}#{of}#{$total-col} {
        @include grid-column(
          $total-columns: $total-col,
          $offset:$i,
          $bleed:null,
          $float:false
        );
      }
    }
  }

  @if $enable-grid-reset == true{
    .#{$size}-reset-order {
      margin-#{$default-float}: 0;
      margin-#{$opposite-float}: 0;
      left: auto;
      right: auto;
      float: $default-float;
    }
  }

  @if $enable-grid-centered == true{

    .grid__item.#{$size}-centered {
      @include grid-column(
        $center:true,
        $bleed:null,
        $float:false
      );
    }
    // Fighting grid__item + grid__item:last-child
    .grid__item.#{$size}-centered:last-child{
      float: none;
    }

  }


  @if $enable-grid-uncentered{

    .grid__item.#{$size}-uncentered {
      margin-#{$default-float}: 0;
      margin-#{$opposite-float}: 0;
      float: $default-float;
    }

    // Fighting .column.<previous-size>-centered:last-child
    .grid__item.#{$size}-uncentered:last-child {
      float: $default-float;
    }

    .grid__item.#{$size}-uncentered.opposite {
      float: $opposite-float;
    }

  }

}

@if $enable-default-grid-classes {

  .grid {
    @include grid-row;

    @if $enable-grid-bleed {
      @at-root{
        .grid--bleed {
          > .grid__item{
            @include grid-column($bleed:true, $float:false);
          }
          .grid {
            margin-left:0;
            margin-right:0;
          }
        }
      }

    }

    .grid {
      @include grid-row($behavior:nested);
    }

    @if $enable-grid-bleed {
      .grid--bleed {
        @include grid-row($behavior:nested-bleed);
      }
    }
  }

  .grid__item{
    @include grid-column($columns:false, $position:true);
  }



  // small grid rules collection
  @media #{$small-up} {
    .small-1 {
      @include grid-column($columns:1,$total-columns: 1, $bleed:null,$float:false);
    }
    @if $enable-grid-half {
      @include generate-default-grid-classes($size:small, $total-col: 2);
    }
    @if $enable-grid-third {
      @include generate-default-grid-classes($size:small, $total-col: 3);
    }
    @if $enable-grid-fourth {
      @include generate-default-grid-classes($size:small, $total-col: 4);
    }
    @if $enable-grid-fifth {
      @include generate-default-grid-classes($size:small, $total-col: 5);
    }
  }

  // medium grid rules collection
  @media #{$medium-up} {
    .medium-1 {
      @include grid-column($columns:1,$total-columns: 1, $bleed:null,$float:false);
    }
    @if $enable-grid-half {
      @include generate-default-grid-classes($size:medium, $total-col: 2);
    }
    @if $enable-grid-third {
      @include generate-default-grid-classes($size:medium, $total-col: 3);
    }
    @if $enable-grid-fourth {
      @include generate-default-grid-classes($size:medium, $total-col: 4);
    }
    @if $enable-grid-fifth {
      @include generate-default-grid-classes($size:medium, $total-col: 5);
    }
  }

  // large grid rules collection
  @media #{$large-up} {
    .large-1 {
      @include grid-column($columns:1,$total-columns: 1, $bleed:null,$float:false);
    }
    @if $enable-grid-half {
      @include generate-default-grid-classes($size:large, $total-col: 2);
    }
    @if $enable-grid-third {
      @include generate-default-grid-classes($size:large, $total-col: 3);
    }
    @if $enable-grid-fourth {
      @include generate-default-grid-classes($size:large, $total-col: 4);
    }
    @if $enable-grid-fifth {
      @include generate-default-grid-classes($size:large, $total-col: 5);
    }
  }

  // if include xl grid classes collection
  @if $enable-xl-grid-classes {
    @media #{$xlarge-up} {
      .xlarge-1 {
        @include grid-column($columns:1,$total-columns: 1, $bleed:null,$float:false);
      }
      @if $enable-grid-half {
        @include generate-default-grid-classes($size:xlarge, $total-col: 2);
      }
      @if $enable-grid-third {
        @include generate-default-grid-classes($size:xlarge, $total-col: 3);
      }
      @if $enable-grid-fourth {
        @include generate-default-grid-classes($size:xlarge, $total-col: 4);
      }
      @if $enable-grid-fifth {
        @include generate-default-grid-classes($size:xlarge, $total-col: 5);
      }
    }
  }

  // if include xxl grid classes
  @if $enable-xxl-grid-classes {
    @media #{$xxlarge-up} {
      .xxlarge-1 {
        @include grid-column($columns:1,$total-columns: 1, $bleed:null,$float:false);
      }
      @if $enable-grid-half {
        @include generate-default-grid-classes($size:xxlarge, $total-col: 2);
      }
      @if $enable-grid-third {
        @include generate-default-grid-classes($size:xxlarge, $total-col: 3);
      }
      @if $enable-grid-fourth {
        @include generate-default-grid-classes($size:xxlarge, $total-col: 4);
      }
      @if $enable-grid-fifth {
        @include generate-default-grid-classes($size:xxlarge, $total-col: 5);
      }
    }
  }

}
