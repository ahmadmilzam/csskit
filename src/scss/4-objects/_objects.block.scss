/* ==========================================================================
   BLOCK
   ========================================================================== */
/**
 * The block object simply stacks an image on top of some text-like content.
 */


// Here we set a variable assuming that default and module settings
// are not set globally. If they have been previously been defined,
// the following variable will be overriden and will be set to `true`.
$imported-default-settings: false !default;

@if ($imported-default-settings == false) {
  @warn "Oops! Have you included default settings and module settings files?";
}


$block-namespace:                    $namespace !default;

$block-gutter:                       $base-spacing-unit !default;
$block-gutter--tiny:                 quarter($block-gutter) !default;
$block-gutter--small:                halve($block-gutter) !default;
$block-gutter--large:                double($block-gutter) !default;
$block-gutter--huge:                 quadruple($block-gutter) !default;

$enable-block--bleed:                false !default;
$enable-block--tiny:                 false !default;
$enable-block--small:                false !default;
$enable-block--large:                false !default;
$enable-block--huge:                 false !default;
$enable-block--center:               false !default;
$enable-block--right:                false !default;


/**
 * Stacked image-with-text object. A simple abstraction to cover a very commonly
 * occurring design pattern.
 */
.#{$block-namespace}block,
%#{$block-namespace}block {
  display: block;
}


  /**
   * 1. Eliminate whitespace around images.
   */
  .#{$block-namespace}block__img,
  %#{$block-namespace}block__img {
    vertical-align: middle; /* [1] */
    margin-bottom: rem-calc($block-gutter);

    @if ($enable-block--bleed == true) {

      /**
       * No space between the image and the text content.
       */
      .#{$block-namespace}block--bleed > &,
      %#{$block-namespace}block--bleed > & {
        margin-bottom: 0;
      }

    }

    @if ($enable-block--tiny == true) {

      /**
       * Tiny space between the image and the text content.
       */
      .#{$block-namespace}block--tiny > &,
      %#{$block-namespace}block--tiny > & {
        margin-bottom: rem-calc($block-gutter--tiny);
      }

    }

    @if ($enable-block--small == true) {

      /**
       * Small space between the image and the text content.
       */
      .#{$block-namespace}block--small > &,
      %#{$block-namespace}block--small > & {
        margin-bottom: rem-calc($block-gutter--small);
      }

    }

    @if ($enable-block--large == true) {

      /**
       * Large space between the image and the text content.
       */
      .#{$block-namespace}block--large > &,
      %#{$block-namespace}block--large > & {
        margin-bottom: rem-calc($block-gutter--large);
      }

    }

    @if ($enable-block--huge == true) {

      /**
       * Huge space between the image and the text content.
       */
      .#{$block-namespace}block--huge > &,
      %#{$block-namespace}block--huge > & {
        margin-bottom: rem-calc($block-gutter--huge);
      }

    }
  }





  /**
   * Text-content.
   */
  .#{$block-namespace}block__body,
  %#{$block-namespace}block__body {
    display: block;
  }





@if ($enable-block--right == true) {

  /**
   * Right-aligned blocks.
   */
  .#{$block-namespace}block--right,
  %#{$block-namespace}block--right {
    text-align: right;
  }

}

@if ($enable-block--center == true) {

  /**
   * Center-aligned blocks.
   */
  .#{$block-namespace}block--center,
  %#{$block-namespace}block--center {
    text-align: center;
  }

}
