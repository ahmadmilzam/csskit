/* ==========================================================================
   TABS build on top CSSKit
   ========================================================================== */

// Here we set a variable assuming that default and module settings
// are not set globally. If they have been previously been defined,
// the following variable will be overriden and will be set to `true`.
$imported-default-settings: false !default;
$imported-module-settings: false !default;

@if ($imported-default-settings == false) {
  @warn "Oops! Have you included default settings and module settings files?"
}

// VARS
$tabs-namespace:        $namespace !default;
$tabs-border-color:     #ddd;
$tabs-border-thickness: 1px;
$tabs-link-padding:     $base-spacing-unit !default;
$tabs-link-color:       $base-text-color !default;
$tabs-link-bg:          darken($base-background-color, 2.5%) !default;
$tabs-link-hover-bg:    darken($base-background-color, 5%) !default;
$tabs-link-active-bg:   $base-background-color !default;

.#{$tabs-namespace}tabs-container{
  border-bottom: $tabs-border-thickness solid $tabs-border-color;
}

/**
 * 1. Reset any residual styles by extend module list inline.
 */
.#{$tabs-namespace}tabs{
  @extend %#{$list-inline-namespace}list-inline; /* [1] */
  // padding-left: rem-calc(halve($base-spacing-unit));
}

  .#{$tabs-namespace}tabs__item{
    @extend %#{$list-inline-namespace}list-inline__item; /* [1] */
  }

    .#{$tabs-namespace}tabs__link{
      display: block;
      padding: rem-calc(halve($tabs-link-padding) $tabs-link-padding);
      border-top-width: $tabs-border-thickness;
      border-bottom-width: 0;
      border-left-width: $tabs-border-thickness;
      border-right-width: $tabs-border-thickness;
      border-style: solid;
      border-color: $tabs-border-color;
      border-radius: $base-radius $base-radius 0 0;
      background-color: $tabs-link-bg;
      color: $tabs-link-color;
      text-align: center;

      &:hover,
      &:active{
        color: $tabs-link-color;
        background-color: $tabs-link-hover-bg;
      }

      &.is-active{
        border-color: darken($tabs-border-color, 10%);
        border-bottom-width: $tabs-border-thickness;
        border-bottom-color: $tabs-link-active-bg;
        background-color: $tabs-link-active-bg;
        margin-bottom: -$tabs-border-thickness;
      }
    }

/**
 * 1. Tables for layout!
 * 2. Force all `table-cell` children to have equal widths.
 * 3. Force the object to be the full width of its parent. Combined with [2],
 *    this makes the object behave in a quasi-`display: block;` manner.
 */

.#{$tabs-namespace}tabs--equal{
  display: table; /* [1] */
  table-layout: fixed; /* [1] */
  width: 100%; /* [3] */

  > .#{$tabs-namespace}tabs__item{
    display: table-cell; /* [2] */
  }
}

.tabs-content{
  @extend %#{$box-namespace}box--small;
}