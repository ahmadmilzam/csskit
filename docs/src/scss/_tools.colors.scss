// COLOR PALETE
$color-key: 'base' !default;
$color-collections: (
  'primary': (
    'base': #3A539B,
    'light': #3A539B,
    'dark':
  ),
  'secondary': (
    'base': #ABB7B7,
    'light': ,
    'dark':
  ),
  'alert': (
    'base': #EF4836,
    'light': ,
    'dark':
  ),
  'success': (
    'base': #00B16A,
    'light': ,
    'dark':
  ),
  'warning': (
    'base': #F5AB35,
    'light': ,
    'dark':
  ),
  'info': (
    'base': #3498DB,
    'light': ,
    'dark':
  )
);

@function color(
  $name: 'primary',
  $variant: $color-key,
  $opacity: 1
) {
  $color: null;

  // Get the color spectrum
  $color-spectrum: map-get($colors, $name);

  // Get the color variant
  @if $color-spectrum {
    $color: map-get($color-spectrum, $variant);
  }

  // Get the alpha setting
  $alpha: if(type-of($opacity) == 'number', $opacity, map-get($opacity, $opacity));

  // Set the alpha of the color
  @if $alpha {
    $color: rgba($color, $alpha);
  }

  @return $color;
}
// Example:
// $button-color: color('primary'); // #8e3329



// TINT AND SHADES
$color-interval: 10% !global;

@function color-level($color-name: 'primary', $level: 0) {
  $color: color($color-name);
  $color-base: if($level < 0, black, white);

  @return mix($color-base, $color, $level * $color-interval);
}

// Example:
// .panel {
//   background-color: color-level('primary', 2);
// }


// OPACITY AND TRANSPARENCY
$opacity: (
  'light': 0.8, // opacity used with lighter colors
  'dark': 0.4   // opacity used with darker colors
);

@function color-alpha($name: 'primary', $opacity: 0) {
  $color: color($name);

  // Get the named opacity level, if it exists
  @if map-key-exists($opacity, $opacity) {
    $opacity: map-get($opacity, $opacity);
  }

  // Use rgba() to manipulate the color's alpha level
  @return rgba($color, $opacity);
}

// Example:
// $button-transparent-color: color-alpha('primary', 'light');
// => rgba(#8e3329, 0.8)


// Returns either a dark or light foreground color, given
// the background color
@function foreground-color($bgcolor, $threshold: .65) {
  @return if(lightness($bgcolor) >= $threshold, $color-dark, $color-light);
}
