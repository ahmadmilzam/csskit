// ==========================================================================
// SPACING
// ==========================================================================

// Here we set a variable assuming that default and module settings
// are not set globally. If they have been previously been defined,
// the following variable will be overriden and will be set to `true`.
$imported-default-settings: false !default;

@if ($imported-default-settings == false) {
  @warn "Oops! Have you included default settings files?";
}


//
// MARGIN
// ==========================================================================

// DEFAULT BASE SPACING UNIT
.m {
  margin: rem-calc($base-spacing-unit);
}

.mt {
  margin-top: rem-calc($base-spacing-unit);
}

.mr {
  margin-right: rem-calc($base-spacing-unit);
}

.mb {
  margin-bottom: rem-calc($base-spacing-unit);
}

.ml {
  margin-left: rem-calc($base-spacing-unit);
}

.mh {
  margin-right: rem-calc($base-spacing-unit);
  margin-left: rem-calc($base-spacing-unit);
}

.mv {
  margin-top: rem-calc($base-spacing-unit);
  margin-bottom: rem-calc($base-spacing-unit);
}


// HALF OF BASE SPACING UNIT
.m- {
  margin: rem-calc(halve($base-spacing-unit));
}

.mt- {
  margin-top: rem-calc(halve($base-spacing-unit));
}

.mr- {
  margin-right: rem-calc(halve($base-spacing-unit));
}

.mb- {
  margin-bottom: rem-calc(halve($base-spacing-unit));
}

.ml- {
  margin-left: rem-calc(halve($base-spacing-unit));
}

.mh- {
  margin-right: rem-calc(halve($base-spacing-unit));
  margin-left: rem-calc(halve($base-spacing-unit));
}

.mv- {
  margin-top: rem-calc(halve($base-spacing-unit));
  margin-bottom: rem-calc(halve($base-spacing-unit));
}

// QUARTER OF BASE SPACING UNIT
.m-- {
  margin: rem-calc(quarter($base-spacing-unit));
}

.mt-- {
  margin-top: rem-calc(quarter($base-spacing-unit));
}

.mr-- {
  margin-right: rem-calc(quarter($base-spacing-unit));
}

.mb-- {
  margin-bottom: rem-calc(quarter($base-spacing-unit));
}

.ml-- {
  margin-left: rem-calc(quarter($base-spacing-unit));
}

.mh-- {
  margin-right: rem-calc(quarter($base-spacing-unit));
  margin-left: rem-calc(quarter($base-spacing-unit));
}

.mv-- {
  margin-top: rem-calc(quarter($base-spacing-unit));
  margin-bottom: rem-calc(quarter($base-spacing-unit));
}

//
// PADDING
// ==========================================================================

// DEFAULT BASE SPACING UNIT
.p {
  padding: rem-calc($base-spacing-unit);
}

.pt {
  padding-top: rem-calc($base-spacing-unit);
}

.pr {
  padding-right: rem-calc($base-spacing-unit);
}

.pb {
  padding-bottom: rem-calc($base-spacing-unit);
}

.pl {
  padding-left: rem-calc($base-spacing-unit);
}

.ph {
  padding-right: rem-calc($base-spacing-unit);
  padding-left: rem-calc($base-spacing-unit);
}

.pv {
  padding-top: rem-calc($base-spacing-unit);
  padding-bottom: rem-calc($base-spacing-unit);
}

// HALF OF BASE SPACING UNIT
.p- {
  padding: rem-calc(halve($base-spacing-unit));
}

.pt- {
  padding-top: rem-calc(halve($base-spacing-unit));
}

.pr- {
  padding-right: rem-calc(halve($base-spacing-unit));
}

.pb- {
  padding-bottom: rem-calc(halve($base-spacing-unit));
}

.pl- {
  padding-left: rem-calc(halve($base-spacing-unit));
}

.ph- {
  padding-right: rem-calc(halve($base-spacing-unit));
  padding-left: rem-calc(halve($base-spacing-unit));
}

.pv- {
  padding-top: rem-calc(halve($base-spacing-unit));
  padding-bottom: rem-calc(halve($base-spacing-unit));
}


// QUARTER OF BASE SPACING UNIT
.p-- {
  padding: rem-calc(quarter($base-spacing-unit));
}

.pt-- {
  padding-top: rem-calc(quarter($base-spacing-unit));
}

.pr-- {
  padding-right: rem-calc(quarter($base-spacing-unit));
}

.pb-- {
  padding-bottom: rem-calc(quarter($base-spacing-unit));
}

.pl-- {
  padding-left: rem-calc(quarter($base-spacing-unit));
}

.ph-- {
  padding-right: rem-calc(quarter($base-spacing-unit));
  padding-left: rem-calc(quarter($base-spacing-unit));
}

.pv-- {
  padding-top: rem-calc(quarter($base-spacing-unit));
  padding-bottom: rem-calc(quarter($base-spacing-unit));
}
