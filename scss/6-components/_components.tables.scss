// ==========================================================================
// TABLES
// ==========================================================================
//

// Here we set a variable assuming that default and module settings
// are not set globally. If they have been previously been defined,
// the following variable will be overriden and will be set to `true`.
$imported-global-settings: false !default;

@if ($imported-global-settings == false) {
  @warn "Oops! Have you included a global settings files?";
}


// Variable(s)
$table-border-width:                 1px !default;
$table-border-style:                 solid !default;
$table-border-color:                 #ddd !default;
$table-zebra-bg:                     #ddd !default;

$enable-table--fixed:                false !default;
$enable-table--tiny:                 false !default;
$enable-table--small:                false !default;
$enable-table--large:                false !default;
$enable-table--cells:                false !default;
$enable-table--rows:                 false !default;
$enable-table--columns:              false !default;
$enable-table--zebra:                false !default;

.#{$global-namespace}table {
  width: 100%;
  max-width: 100%;
  thead > tr > th {
    text-align: left;
    vertical-align: bottom;
    border-bottom: ($table-border-width * 2) solid color-level($table-border-color, -2);
  }

  th,
  td {
    padding: rem-calc($global-spacing-unit);
  }

  &__caption {
    padding-top: rem-calc($global-spacing-unit--small);
    padding-bottom: rem-calc($global-spacing-unit--small);
    color: #888;
    text-align: left;
  }
}


@if ($enable-table--equal == true) {

  //
  // Force tables into having equal-width columns.
  //
  .#{$global-namespace}table--equal {
    table-layout: fixed;
  }

}


@if ($enable-table--tiny == true) {

  //
  // Tables with very tightly packed cells.
  //
  .#{$global-namespace}table--tiny {

    th,
    td {
      padding: rem-calc($global-spacing-unit--tiny);
    }

  }

}


@if ($enable-table--small == true) {

  //
  // Lightly packed cells.
  //
  .#{$global-namespace}table--small {

    th,
    td {
      padding: rem-calc($global-spacing-unit--small);
    }

  }

}


@if ($enable-table--large == true) {

  //
  // Tables with very widely padded cells.
  //
  .#{$global-namespace}table--large {

    th,
    td {
      padding: rem-calc($global-spacing-unit--large);
    }

  }

}


@if ($enable-table--cells == true) {

  //
  // Add borders around a `table`.
  //
  .#{$global-namespace}table--cells {

    th,
    td {
      border: $table-border-width $table-border-style $table-border-color;
    }

  }

}


@if ($enable-table--rows == true) {

  //
  // Add borders only to `table`’s rows.
  //
  .#{$global-namespace}table--rows {

    &,
    th,
    td {
      border: 0 $table-border-style $table-border-color;
    }

  }

  .#{$global-namespace}table--rows {
    th,
    td {
      border-bottom-width: $table-border-width;
    }
  }

}


@if ($enable-table--columns == true) {

  //
  // Add borders only to `table`’s columns.
  //
  .#{$global-namespace}table--columns {

    &,
    th,
    td {
      border: 0 $table-border-style $table-border-color;
    }
  }

  .#{$global-namespace}table--columns {
    border-left-width: $table-border-width;

    th,
    td {
      border-right-width: $table-border-width;
    }
  }

}


@if ($enable-table--zebra == true) {

  //
  // Add borders only to `table`’s columns.
  //
  .#{$global-namespace}table--zebra {
    tbody tr:nth-of-type(odd) {
      background-color: $table-zebra-bg;
    }
  }

}
