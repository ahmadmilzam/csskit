// ==========================================================================
// FLAG
// ==========================================================================
//
// The flag object is a design pattern similar to the media object, however it
// utilises `display: table[-cell];` to give us control over the vertical
// alignments of the text and image. csswizardry.com/2013/05/the-flag-object
//

// Here we set a variable assuming that default and module settings
// are not set globally. If they have been previously been defined,
// the following variable will be overriden and will be set to `true`.
$imported-global-settings: false !default;

@if ($imported-global-settings == false) {
  @warn "Oops! Have you included a global settings files?";
}


// Variable(s)
$enable-flag--bleed:                 false !default;
$enable-flag--tiny:                  false !default;
$enable-flag--small:                 false !default;
$enable-flag--large:                 false !default;
$enable-flag--huge:                  false !default;

$enable-flag--rev:                   false !default;
$enable-flag--top:                   false !default;
$enable-flag--bottom:                false !default;


//
// 1. Allows us to control vertical alignments
// 2. Force the object to be the full width of its parent. Combined with [1],
//    this makes the object behave in a quasi-`display: block;` manner.
//
.o-flag {
  display: table; // 1
  width: 100%; // 2
}


//
// Items within a flag object. There should only ever be one of each.
//
// 1. Default to aligning content to their middles.
//
.o-flag__head,
.o-flag__body {
  display: table-cell;
  vertical-align: middle; // 1
}


//
// Flag images have a space between them and the body of the object.
//
// 1. Force `.flag__head` to take up as little space as possible:
//    https://pixelsvsbytes.com/2012/02/this-css-layout-grid-is-no-holy-grail/
// 2. Flag images have a space between them and the body of the object.
// 3. Fixes problem with images disappearing.
//
.o-flag__head {
  width: 1px; // 1
  padding-right: rem-calc($global-spacing-unit); // 2

}

.o-flag__img {
  max-width: none; // 3
}


//
// The container for the main content of the flag object.
//
// 1. Forces the `.flag__body` to take up all remaining space.
//

.o-flag__body {
  width: auto; // 1

  &,
  > :last-child {
    margin-bottom: 0;
  }

}


//
// Size variants [tiny|small|large|huge]
// ==========================================================================
//

// Tiny flags.
@if ($enable-flag--tiny == true) {

  .o-flag--tiny {

    > .o-flag__head {
      padding-right: rem-calc($global-spacing-unit--tiny);
    }

    //
    // Tiny reversed flags.
    //
    @if ($enable-flag--rev == true) {

      &.o-flag--rev {
        > .o-flag__head {
          padding-right: 0;
          padding-left: rem-calc($global-spacing-unit--tiny);
        }
      }

    }

  }

}


// Small flags.
@if ($enable-flag--small == true) {

  .o-flag--small {

    > .o-flag__head {
      padding-right: rem-calc($global-spacing-unit--small);
    }

    //
    // Small reversed flags.
    //
    @if ($enable-flag--rev == true) {

      &.o-flag--rev {
        > .o-flag__head {
          padding-right: 0;
          padding-left: rem-calc($global-spacing-unit--small);
        }
      }

    }

  }

}


// Large flags.
@if ($enable-flag--large == true) {

  .o-flag--large {

    > .o-flag__head {
      padding-right: rem-calc($global-spacing-unit--large);
    }

    //
    // Large reversed flags.
    //
    @if ($enable-flag--rev == true) {

      &.o-flag--rev {
        > .o-flag__head {
          padding-right: 0;
          padding-left: rem-calc($global-spacing-unit--large);
        }
      }

    }

  }

}


// Huge flags.
@if ($enable-flag--huge == true) {

  .o-flag--huge {
    > .o-flag__head {
      padding-right: rem-calc($global-spacing-unit--huge);
    }

    //
    // Huge reversed flags.
    //
    @if ($enable-flag--rev == true) {

      &.o-flag--rev {
        > .o-flag__head {
          padding-right: 0;
          padding-left: rem-calc($global-spacing-unit--huge);
        }
      }

    }

  }

}


// Bleed flags.
@if ($enable-flag--bleed == true) {
  //
  // Bleed flag objects have no space between the image- and text-content.
  //
  .o-flag--bleed {
    > .o-flag__head {
      padding-right: 0;
      padding-left: 0;
    }
  }
}


//
// Alignment variants
// ==========================================================================
//
@if ($enable-flag--top == true) {

  //
  // Vertically top aligned flag objects.
  //

  .o-flag--top > .o-flag__head,
  .o-flag--top > .o-flag__body {
    vertical-align: top;
  }

}

@if ($enable-flag--bottom == true) {

  //
  // Vertically bottom aligned flag objects.
  //

  .o-flag--bottom > .o-flag__head,
  .o-flag--bottom > .o-flag__body {
    vertical-align: bottom;
  }

}


//
// Reversed flag
// ==========================================================================
//
@if ($enable-flag--rev == true) {

  //
  // Reversed flag objects have their image-content to the right, and text-content
  // to the left.
  //
  // 1. Swap the rendered direction of the object…
  // 2. …and reset it.
  // 3. Reassign margins to the correct sides.
  //

  .o-flag--rev {
    direction: rtl; // 1

    > .o-flag__head,
    > .o-flag__body {
      direction: ltr; // 2
    }

    > .o-flag__head {
      padding-right: 0; // 3
      padding-left: $global-spacing-unit; // 3
    }

  }

}
